// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load,sel=address[0..2],a=rraload0,b=rraload1,c=rraload2,d=rraload3,e=rraload4,f=rraload5,g=rraload6,h=rraload7);


RAM512(in=in,load=rraload0,address=address[3..11],out=rram60);
    RAM512(in=in,load=rraload1,address=address[3..11],out=rram61);
       RAM512(in=in,load=rraload2,address=address[3..11],out=rram62);
          RAM512(in=in,load=rraload3,address=address[3..11],out=rram63);
             RAM512(in=in,load=rraload4,address=address[3..11],out=rram64);
                RAM512(in=in,load=rraload5,address=address[3..11],out=rram65);
                   RAM512(in=in,load=rraload6,address=address[3..11],out=rram66);
                      RAM512(in=in,load=rraload7,address=address[3..11],out=rram67);
          

Mux8Way16(a=rram60,b=rram61,c=rram62,d=rram63,e=rram64,f=rram65,g=rram66,h=rram67,sel=address[0..2],out=out);
}