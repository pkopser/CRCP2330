// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux4Way(in=load,sel=address[0..1],a=rrraload0,b=rrraload1,c=rrraload2,d=rrraload3);


RAM4K(in=in,load=rrraload0,address=address[2..13],out=rrram60);
    RAM4K(in=in,load=rrraload1,address=address[2..13],out=rrram61);
       RAM4K(in=in,load=rrraload2,address=address[2..13],out=rrram62);
          RAM4K(in=in,load=rrraload3,address=address[2..13],out=rrram63);
             
          

Mux4Way16(a=rrram60,b=rrram61,c=rrram62,d=rrram63,sel=address[0..1],out=out);
}