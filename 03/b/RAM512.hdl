// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:


 DMux8Way(in=load,sel=address[0..2],a=raload0,b=raload1,c=raload2,d=raload3,e=raload4,f=raload5,g=raload6,h=raload7);


RAM64(in=in,load=raload0,address=address[3..9],out=ram60);
    RAM64(in=in,load=raload1,address=address[3..9],out=ram61);
       RAM64(in=in,load=raload2,address=address[3..9],out=ram62);
          RAM64(in=in,load=raload3,address=address[3..9],out=ram63);
             RAM64(in=in,load=raload4,address=address[3..9],out=ram64);
                RAM64(in=in,load=raload5,address=address[3..9],out=ram65);
                   RAM64(in=in,load=raload6,address=address[3..9],out=ram66);
                      RAM64(in=in,load=raload7,address=address[3..9],out=ram67);
          

Mux8Way16(a=ram60,b=ram61,c=ram62,d=ram63,e=ram64,f=ram65,g=ram66,h=ram67,sel=address[0..2],out=out);
}